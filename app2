from bs4 import BeautifulSoup
import requests
import logging
import os
from aiogram import Bot, Dispatcher, executor, types
from aiogram.dispatcher.filters import Text


url = 'http://samotlor.tv/ru/news-page/obrazovanie/kak-prokhodit-ochnyj-etap-konkursa-pedagogicheskij-debyut-2021'
page = requests.get(url)
#print(page.status_code)

API_TOKEN = '2222222220'
# Configure logging
logging.basicConfig(level=logging.INFO)
# Initialize bot and dispatcher
bot = Bot(token=API_TOKEN)
dp = Dispatcher(bot)

new_news = []
news = []
news_item = []

soup = BeautifulSoup(page.text, "html.parser")
#soup2 = str(soup)
#with open('my_file.txt', 'w') as f:
#    f.write(soup2)  

news = soup.findAll('div', class_="sppb-addon-content")
#print(news)
bug = soup.findAll('div', class_="article-full-image")

kek = str(bug)
lol = kek[43:108]

for news_item in news:
    if news_item.find('p') is not None:
        new_news.append(news_item.text)

#for i in range(len(new_news)):
    #print(new_news[i])

#with open('my_file3.txt', 'w') as f:
#    f.write("\n".join(new_news))  
#f.close()       

@dp.message_handler(commands=['start'])
async def send_welcome(message: types.Message):
    keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True)
    buttons = ["Показать", "На сайте"]
    keyboard.add(*buttons)
    await message.reply(f"".join(lol))
    await message.reply(f"\n".join(new_news))
    await message.answer("Показать следующую новость?", reply_markup=keyboard)

@dp.message_handler(Text(equals="Показать"))
async def with_puree(message: types.Message):
    await message.reply(f"".join(lol))
    await message.reply(f"\n".join(new_news))


@dp.message_handler(Text(equals="На сайте"))
async def cmd_inline_url(message: types.Message):
    buttons = [
        types.InlineKeyboardButton(text="Samotlor.tv", url="https://samotlor.tv"),
        types.InlineKeyboardButton(text="Vkontakte", url="https://vk.com/samotlor_tv")
    ]
    keyboard = types.InlineKeyboardMarkup(row_width=1)
    keyboard.add(*buttons)
    await message.answer("Cсылки", reply_markup=keyboard)

if __name__ == '__main__':
    executor.start_polling(dp, skip_updates=True)



